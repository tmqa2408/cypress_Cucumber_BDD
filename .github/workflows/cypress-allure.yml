name: Run Cypress Tests with Allure Reports

on:
  push:
    branches: [main]
  pull_request:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox, edge]

    name: Run tests in ${{ matrix.browser }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Allure reporter and CLI
        run: |
          npm install mocha-allure-reporter --save-dev
          npm install -g allure-commandline --save-dev  

      - name: Verify Cypress is installed
        run: npx cypress verify

      - name: Run Cypress tests on ${{ matrix.browser }}
        run: npx npx cypress run --browser ${{ matrix.browser }} --reporter mocha-allure-reporter


      - name: "Debug: Check allure-results"
        run: |
          echo "Current directory:"
          pwd
          echo "List files:"
          ls -la
          echo "Check allure-results:"
          ls -la allure-results || echo "Directory 'allure-results' not found"

      - name: Generate Allure HTML report
        run: |
            mkdir -p allure-report
            npx allure generate allure-results --clean -o allure-report 

      - name: Upload Allure results
        if: success() && hashFiles('allure-results/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: allure-results

  generate-report:
    needs: run-tests
    runs-on: ubuntu-latest
    name: Generate merged Allure report

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts

      - name: "Debug: Show downloaded artifacts"
        run: |
          echo "Downloaded artifacts:"
          ls -R downloaded-artifacts || echo "Nothing found"

      - name: Combine Allure results
        run: |
            mkdir -p combined-results
            echo "Copying contents of each artifact directory..."
            for dir in downloaded-artifacts/*; do
                echo "Processing $dir"
                cp -r "$dir"/* combined-results/ || echo "Nothing to copy from $dir"
            done
            echo "Contents of combined-results:"
            ls -R combined-results || echo "combined-results is empty"

      - name: Generate Allure report
        run: |
          npm install -g allure-commandline
          allure generate combined-results --clean -o allure-report
          ls -R allure-report

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

  deploy-gh-pages:
    needs: generate-report
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: downloaded-artifacts

    - name: Unzip all artifacts
      run: |
          mkdir -p combined-results
          for archive in downloaded-artifacts/*; do
            echo "Unzipping $archive"
            unzip -q "$archive" -d "$archive"
          done
          
    - name: Combine Allure results
      run: |
          echo "Merging allure-results-* folders..."
          for dir in downloaded-artifacts/allure-results-*; do
            echo "Copying from $dir"
            cp -r "$dir"/* combined-results/ || echo "Nothing to copy from $dir"
          done
          echo "Contents of combined-results:"
          ls -R combined-results || echo "combined-results is empty"


    - name: Merge all Allure results
      run: |
        mkdir -p combined-report
        find downloaded-artifacts -type d -exec cp -r {}/* combined-report/ \;
        ls -R combined-report

    - name: Ensure publish dir exists
      run: mkdir -p gh-pages/combined-report
    
    - name: Add .nojekyll file
      run: touch gh-pages/combined-report/.nojekyll
        
    - name: Check built content
      run: ls -R gh-pages/combined-report  

    - name: Deploy to GitHub Pages ðŸš€
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./gh-pages/combined-report         